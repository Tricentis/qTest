{{- $sslCert := printf "%s/tls.crt" .Values.qTestScenario.qTestScenarioSSLMountPath -}}
{{- $sslKey := printf "%s/tls.key" .Values.qTestScenario.qTestScenarioSSLMountPath -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: qtest-scenario-configmap
  namespace: {{ .Values.namespace.name }}
  labels:
    app: qTestScenario
data:
  qTestScenarioDBName: "{{ .Values.qTestScenario.qTestScenarioDBName }}"
  qTestScenarioDBUserName: "{{ .Values.qTestScenario.qTestScenarioDBUserName }}"
  qTestScenarioDBHostName: "{{ .Values.qTestScenario.qTestScenarioDBHostName }}"
  qTestScenarioDBPort: "{{ .Values.qTestScenario.qTestScenarioDBPort }}"
  qTestScenarioLocalBaseURL: "{{ .Values.qTestScenario.qTestScenarioLocalBaseURL }}"
  qTestScenarioSwaggerUrl: "{{ .Values.qTestScenario.qTestScenarioSwaggerUrl }}"
  qTestScenarioNodeTLSRejectUnAuthorized: "{{ .Values.qTestScenario.qTestScenarioNodeTLSRejectUnAuthorized }}"
  qTestScenarioNodeEnvironment : "{{ .Values.qTestScenario.qTestScenarioNodeEnvironment }}"
  qTestScenarioAppKeyDescriptor: "{{ .Values.qTestScenario.qTestScenarioAppKeyDescriptor }}"
  qTestScenarioQTestURL: "{{ .Values.qTestScenario.qTestScenarioQTestURL }}"
  qTestScenarioIsSSLRequired: "{{ .Values.qTestScenario.qTestScenarioSSLRequired }}"
  qTestScenarioDeploymentEnv: "{{ .Values.qTestScenario.qTestScenarioDeploymentEnv }}"
  {{- if .Values.qTestScenario.qTestScenarioSSLRequired }}
  qTestScenarioSSLCert: "{{ $sslCert }}"
  qTestScenarioSSLKey: "{{ $sslKey }}"
  qTestScenarioPort: "{{ .Values.service.targetHttpsPort }}"
  {{- else }}
  qTestScenarioPort: "{{ .Values.service.targetPort }}"
  {{- end -}}
