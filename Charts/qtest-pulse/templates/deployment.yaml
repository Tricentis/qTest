{{- $existingImageCredentials := .Values.imageCredentials.existingImageCredentials -}}
{{- $imageCredentials := .Values.imageCredentials.name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qtest-pulse.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.rollouts.enabled }}
  replicas: 0
  {{- else }}
  replicas: {{ .Values.autoscaling.minReplicas }}
  {{- end }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: qtest-pulse
  template:
    metadata:
      labels:
        app: qtest-pulse
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
    {{ if .Values.imageCredentials.enabled }}
      {{ if .Values.imageCredentials.existingImageCredentials }}
      imagePullSecrets:
        - name: {{ $existingImageCredentials }}
      {{ else }}
      imagePullSecrets:
        - name: {{ $imageCredentials }}
      {{- end }}
    {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- if .Values.extraInitContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      initContainers:
      {{- if eq "string" (printf "%T" .Values.extraInitContainers) }}
{{ tpl .Values.extraInitContainers . | indent 8 }}
      {{- else }}
{{ toYaml .Values.extraInitContainers | indent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ .Chart.Name }}
{{- if .Values.extraArgs }}
          args:
{{- with .Values.extraArgs }}
{{ toYaml . | indent 12 }}
{{- end }}
{{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.autoscaling.healthApiPath }}
              port: {{ .Values.service.targetPort }}
            periodSeconds: {{ .Values.autoscaling.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.autoscaling.healthApiPath }}
              port: {{ .Values.service.targetPort }}
            periodSeconds: {{ .Values.autoscaling.periodSeconds }}
          startupProbe:
            httpGet:
              path: {{ .Values.autoscaling.healthApiPath }}
              port: {{ .Values.service.targetPort }}
            failureThreshold: {{ .Values.autoscaling.failureThreshold }}
            periodSeconds: {{ .Values.autoscaling.periodSeconds }}
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
              name: http
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: qtest-pulse-configmap
                  key: qTestPulseNodeEnv
            - name: PULSE_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: qtest-pulse-configmap
                  key: qTestPulseDBName
            - name: PULSE_DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: qtest-pulse-configmap
                  key: qTestPulseDBUserName
            - name: PULSE_DB_PWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: client.jdbc.postgres.password
            - name: PULSE_DB_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: qtest-pulse-configmap
                  key: qTestPulseDBHostName
            - name: PG_URL
              {{- if .Values.qTestPulse.qTestPulseDBSSLEnable }}
              value: {{ printf "postgresql://$(PULSE_DB_USERNAME):$(PULSE_DB_PWD)@$(PULSE_DB_HOSTNAME)/$(PULSE_DB_NAME)%s" .Values.qTestPulse.qTestPulseDBSSL }}
              {{- end }}
              {{- if not .Values.qTestPulse.qTestPulseDBSSLEnable }}
              value: {{ printf "postgresql://$(PULSE_DB_USERNAME):$(PULSE_DB_PWD)@$(PULSE_DB_HOSTNAME)/$(PULSE_DB_NAME)" }}
              {{- end }}
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: qtest-pulse-configmap
                  key: qTestPulsePort
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              valueFrom:
                configMapKeyRef:
                  name: qtest-pulse-configmap
                  key: qTestPulseNodeTLSRejectUnAuthorized
            - name: ROOT_URL
              valueFrom:
                configMapKeyRef:
                  name: qtest-pulse-configmap
                  key: qTestPulseRootURL
            - name: QTEST_URL
              valueFrom:
                configMapKeyRef:
                  name: qtest-pulse-configmap
                  key: qTestPulseQTestURL
            - name: SCENARIO_URL
              valueFrom:
                configMapKeyRef:
                  name: qtest-pulse-configmap
                  key: qTestPulseScenarioURL
{{- with .Values.extraEnv }}
{{ toYaml . | indent 12 }}
{{- end }}
{{- if .Values.qTestPulse.qTestPulseDBSSLEnable }}
          volumeMounts:
          - name: qtest-db-secret-volume
            mountPath: {{ .Values.qTestPulse.qTestPulseDBSSLMountPath }}
{{- with .Values.extraVolumeMounts }}
{{ toYaml . | indent 10 }}
{{- end }}
{{- end }}
      {{- if .Values.extraContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      {{- if eq "string" (printf "%T" .Values.extraContainers) }}
{{ tpl .Values.extraContainers . | indent 8 }}
      {{- else }}
{{ toYaml .Values.extraContainers | indent 8 }}
      {{- end }}
      {{- end }}
{{- if .Values.qTestPulse.qTestPulseDBSSLEnable }}
      volumes:
      - name: qtest-db-secret-volume
        secret:
          secretName: qtest-db-root-secret
{{- with .Values.extraVolumes }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- end -}}