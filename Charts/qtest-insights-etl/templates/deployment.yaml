apiVersion: apps/v1
kind: Deployment
metadata:
  name: qtest-insights-etl
  namespace: {{ .Values.namespace.name }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: qtest-insights-etl
  template:
    metadata:
      labels:
        app: qtest-insights-etl
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ .Chart.Name }}
          livenessProbe:
            httpGet:
              path: {{ .Values.autoscaling.healthApiPath }}
              port: {{ .Values.autoscaling.targetPort }}
            periodSeconds: {{ .Values.autoscaling.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.autoscaling.healthApiPath }}
              port: {{ .Values.autoscaling.targetPort }}
            periodSeconds: {{ .Values.autoscaling.periodSeconds }}
          startupProbe:
            httpGet:
              path: {{ .Values.autoscaling.healthApiPath }}
              port: {{ .Values.autoscaling.targetPort }}
            failureThreshold: {{ .Values.autoscaling.failureThreshold }}
            periodSeconds: {{ .Values.autoscaling.periodSeconds }}
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
              name: http
          envFrom:
            - configMapRef:
                name: qtest-insights-etl-configmap
          env:
            - name: QTEST_DB_PW
              valueFrom:
                secretKeyRef:
                  name: qtest-manager-secret
                  key: client.jdbc.postgres.password
            - name: WRITE_QTEST_DB_PW
              valueFrom:
                secretKeyRef:
                  name: qtest-manager-secret
                  key: client.jdbc.postgres.password
            - name: SESSIONS_DB_PW
              valueFrom:
                secretKeyRef:
                  name: qtest-manager-secret
                  key: client.jdbc.postgres.password
            - name: WRITE_SESSIONS_DB_PW
              valueFrom:
                secretKeyRef:
                  name: qtest-manager-secret
                  key: client.jdbc.postgres.password
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: qtest-insights-etl-logs
              mountPath: /usr/local/insights-etl/logs
      volumes:
        - name: qtest-insights-etl-logs
        {{- if .Values.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- else if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "qtest-insights-etl.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}

