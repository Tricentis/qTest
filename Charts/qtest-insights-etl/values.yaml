# Default values for qtest-insights-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namespace:
  name: qtest
reloader:
  enabled: false
secrets:
  enabled: true
replicaCount: 1
image:
  repository: qasymphony/insights-etl
  pullPolicy: IfNotPresent
  tag: "v6.9.28.op"
deployment:
  annotations: {}
service:
  type: LoadBalancer
  port: 8080
  targetPort: 8080
  serviceName: insights-etl-service
qTestInsightsEtl:
  qTestLogPath: /logs
  qTestUpdateDB: true
  qTestInsightsEtlDBName: qtest
  qTestInsightsEtlDBUser: postgres
  qTestInsightsEtlDBSchemaName: public
  qTestInsightsEtlDBHost: postgres.local
  qTestInsightsEtlWriteQTestDBName: qtest
  qTestInsightsEtlWriteQTestDBUser: postgres
  qTestInsightsEtlWriteQTestDBHost: postgres.local
  qTestInsightsEtlSessionDBName: sessions
  qTestInsightsEtlSessionDBUser: postgres
  qTestInsightsEtlSessionDBHost: postgres.local
  writeSessionsDBHost: postgres.local
  writeSessionsDBName: qtest
  writeSessionsDBUser: postgres
#### Ingress/IngressClass (> K8s 1.18-1.22+) #####
ingressClass:
  enabled: true
  labels: {}
  controller: ingress.k8s.aws/alb
  isDefaultClass: true
  # Use to force a networking.k8s.io API Version for certain CI/CD applications. Ex. "v1"
  fallbackApiVersion: ""
ingress:
  enabled: true
  name: insights-etl-ingress
  labels: {}
  annotations: {}
  canary:
    annotationPrefix: ""
    annotations: {}
    # canary-by-header: []
    # canary-by-header-pattern: []
  hosts:
    host: insights-etl.qtest.local
  paths: []
  extraPaths:
    - path: /*
      pathType: ImplementationSpecific
  tls: []
  # - secretName: qtest-svc-tls
  #   hosts:
  #     - svc.qtest.com
  https: false
persistence:
  enabled: false
  ## Set annotations on pvc
  annotations: {}
  ## Specify an existing volume claim instead of creating a new one.
  ## When using this option all following options like storageClass, accessMode and size are ignored.
  # existingClaim:

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass:
  accessMode: ReadWriteOnce
  size: 5Gi
  ## Specify extra volumes. Refer to ".spec.volumes" specification : https://kubernetes.io/fr/docs/concepts/storage/volumes/
  volumes: []
  ## Specify extra mounts. Refer to ".spec.containers.volumeMounts" specification : https://kubernetes.io/fr/docs/concepts/storage/volumes/
  mounts: []
# VPA values
vpaAutoscaling:
  enabled: false
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
      - containerName: '*'
        controlledValues: RequestsAndLimits
# HPA values
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 1
  healthApiPath: /ping
  targetPort: 8765
  periodSeconds: 30
  failureThreshold: 4
  targetCPUUtilizationPercentage: 85
  targetMemoryUtilizationPercentage: 85
resources:
  requests:
    cpu: 1
    memory: 2Gi
  limits:
    cpu: 1
    memory: 2Gi
limitRange:
  enabled: false
resourceQuota:
  enabled: false
